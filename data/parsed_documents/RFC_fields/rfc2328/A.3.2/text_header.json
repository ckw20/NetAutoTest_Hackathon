{
  "protocol_field": {
    "name": "Hello Packet",
    "version": "1",
    "description": "OSPF packet type 1 used to establish and maintain neighbor relationships.",
    "fields": [
      {
        "name": "Version #",
        "description": "The OSPF version number.",
        "size_bits": 8,
        "constraints": [
          "Value must match the OSPF version in use."
        ]
      },
      {
        "name": "Packet Type",
        "description": "Identifies the packet as a Hello packet.",
        "size_bits": 8,
        "constraints": [
          "Value must be 1 for Hello packets."
        ]
      },
      {
        "name": "Packet length",
        "description": "The length of the packet in bytes, including the header.",
        "size_bits": 16,
        "constraints": [
          "Value must be greater than or equal to the minimum size of a Hello packet."
        ]
      },
      {
        "name": "Router ID",
        "description": "The identifier of the router originating the packet.",
        "size_bits": 32,
        "constraints": [
          "Must be a unique 32-bit value within the OSPF domain."
        ]
      },
      {
        "name": "Area ID",
        "description": "The OSPF area to which the interface belongs.",
        "size_bits": 32,
        "constraints": [
          "Must match the Area ID of neighboring routers for adjacency formation."
        ]
      },
      {
        "name": "Checksum",
        "description": "A checksum of the entire packet for error detection.",
        "size_bits": 16,
        "constraints": [
          "Calculated using standard OSPF checksum algorithm."
        ]
      },
      {
        "name": "AuType",
        "description": "Authentication type used for the packet.",
        "size_bits": 16,
        "constraints": [
          "Valid values include 0 (no authentication), 1 (simple password), and 2 (cryptographic)."
        ]
      },
      {
        "name": "Authentication",
        "description": "Authentication data, format depends on AuType.",
        "size_bits": 64,
        "constraints": [
          "Content must conform to the specified AuType."
        ]
      },
      {
        "name": "Network Mask",
        "description": "The subnet mask associated with the interface.",
        "size_bits": 32,
        "constraints": [
          "Must match the network mask of all routers on the same network. On unnumbered point-to-point networks and virtual links, this field should be set to 0.0.0.0."
        ]
      },
      {
        "name": "HelloInterval",
        "description": "The interval in seconds between sending Hello packets.",
        "size_bits": 16,
        "constraints": [
          "Must agree with neighboring routers on the same network. A mismatch causes processing to stop and the packet to be dropped. The value must be the same for all routers attached to a common network."
        ]
      },
      {
        "name": "Options",
        "description": "Optional capabilities supported by the router.",
        "size_bits": 8,
        "constraints": [
          "Bits represent specific capabilities as defined in Section A.2. Five bits have been assigned: DC-bit (demand circuits), EA-bit (External-Attributes-LSAs), N/P-bit (Type-7 LSAs), MC-bit (IP multicast datagrams), and E-bit (AS-external-LSAs). The E-bit must match the ExternalRoutingCapability of the attached OSPF area; if the area is a stub area, the E-bit must be clear; otherwise, it must be set. Mismatch causes processing to stop and the packet to be dropped. Unrecognized bits in the Options field should be ignored in received packets and reset (cleared) when sending Hello packets, Database Description packets, or originating LSAs."
        ]
      },
      {
        "name": "Rtr Pri",
        "description": "The priority of the router in Designated Router election.",
        "size_bits": 8,
        "constraints": [
          "If set to 0, the router is ineligible to become a Designated Router. Changes in this field may trigger the NeighborChange event in the receiving interface's state machine."
        ]
      },
      {
        "name": "RouterDeadInterval",
        "description": "The time in seconds before declaring a silent router down.",
        "size_bits": 32,
        "constraints": [
          "Must agree with neighboring routers on the same network. A mismatch causes processing to stop and the packet to be dropped. The value must be the same for all routers attached to a common network."
        ]
      },
      {
        "name": "Designated Router",
        "description": "The IP address of the Designated Router.",
        "size_bits": 32,
        "constraints": [
          "Set to 0.0.0.0 if no Designated Router exists. If the neighbor declares itself as the Designated Router and its Backup Designated Router field is 0.0.0.0 while the receiving interface is in the Waiting state, the BackupSeen event is scheduled. Otherwise, changes in the Designated Router declaration may trigger the NeighborChange event."
        ]
      },
      {
        "name": "Backup Designated Router",
        "description": "The IP address of the Backup Designated Router.",
        "size_bits": 32,
        "constraints": [
          "Set to 0.0.0.0 if no Backup Designated Router exists. If the neighbor declares itself as the Backup Designated Router and the receiving interface is in the Waiting state, the BackupSeen event is scheduled. Otherwise, changes in the Backup Designated Router declaration may trigger the NeighborChange event."
        ]
      },
      {
        "name": "Neighbor",
        "description": "List of Router IDs of neighbors from whom valid Hello packets have been received recently.",
        "size_bits": null,
        "constraints": [
          "Each entry must be a valid Router ID. Must be updated within the RouterDeadInterval. If the router itself appears in this list, the neighbor state machine is executed with the event 2-WayReceived. Otherwise, the event 1-WayReceived is triggered, and processing stops."
        ]
      }
    ]
  },
  "comments": "This JSON template describes the structure of a protocol field specification. The 'protocol_field' object contains metadata about the protocol (name, version, description) and an array of field definitions. Each field has properties for name, description, bit size (int, null if variable), and constraints (e.g., valid values/ranges) (a list of strings). Use this template to document network protocol fields."
}