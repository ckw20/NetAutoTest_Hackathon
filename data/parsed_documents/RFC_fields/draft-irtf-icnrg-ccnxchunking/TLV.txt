3.  TLV Types

   This section specifies the TLV types used by CCNx chunking.

3.1.  ChunkNumber

   CCNx chunking defines one new CCNx Name Segment type: ChunkNumber.

    +========+=========+==========+==================================+
    |  Type  |  Abbrev |   Name   | Description                      |
    +========+=========+==========+==================================+
    | %x0004 | T_CHUNK |  Chunk   | The current Chunk Number, is an  |
    |        |         |  Number  | unsigned integer in network byte |
    |        |         | (Section | order without leading zeros.     |
    |        |         |   3.1)   | The value of zero is represented |
    |        |         |          | as the single byte %x00.         |
    +--------+---------+----------+----------------------------------+

                           Table 1: ChunkNumber

   The current chunk number, as an unsigned integer in network byte
   order without leading zeros.  The value of zero is represented as the
   single byte %x00.

   In ccnx: URI form, it is denoted as "Chunk".

                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+--------------+
   |           T_CHUNK             |             Length           |
   +---------------+---------------+---------------+--------------+
   |     variable length integer   /
   +---------------+---------------+

                 Code          Type name
            ==============     ===============================
                %x0000         Reserved [RFC8609]
                %x0001         T_NAMESEGMENT [RFC8609]
                %x0002         T_IPID [RFC8609]
                %x0003         T_NONCE [RFC9508]
                %x0004         T_CHUNK
            %x0005-%x000F      Unassigned
            %x0010-%x0013      Reserved [RFC8609]
            %x0014-0x0FFE      Unassigned
            %x0FFF             T_ORG [RFC8609]
            %x1000-0x1FFF      T_APP:00 - T_APP:4096 [RFC8609]
            %x2000-0xFFFF      Unassigned




                 Figure 1: CCNx Name Segment Type Namespace

3.2.  Message TLVs

   CCNx chunking defines two new CCNx Message type: EndChunkNumber and
   ChunkSize.

    +========+==============+================+========================+
    |  Type  |    Abbrev    |      Name      | Description            |
    +========+==============+================+========================+
    | %x0007 |  T_ENDCHUNK  | EndChunkNumber | The last Chunk number, |
    |        |              | (Section 3.2)  | as an unsigned integer |
    |        |              |                | in network byte order  |
    |        |              |                | without leading zeros. |
    |        |              |                | The value of zero is   |
    |        |              |                | represented as the     |
    |        |              |                | single byte %x00.      |
    +--------+--------------+----------------+------------------------+
    | %x000F | T_CHUNK_SIZE |   ChunkSize    | The fixed payload size |
    |        |              | (Section 3.2)  | of user data upto the  |
    |        |              |                | last chunk.  It must   |
    |        |              |                | be a positive integer. |
    +--------+--------------+----------------+------------------------+

                          Table 2: EndChunkNumber

   The ending chunk number, as an unsigned integer in network byte order
   without leading zeros.  The value of zero is represented as the
   single byte %x00.

                        1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +---------------+---------------+---------------+--------------+
   |         T_ENDCHUNK            |             Length           |
   +---------------+---------------+---------------+--------------+
   |     variable length integer   /
   +---------------+---------------+

   The chunk size number is the same as the end chunk number, except it
   must be a positive integer.






                     Code          Type name
                ==============     ===================
                    %x0000         T_NAME [RFC8609]
                    %x0001         T_PAYLOAD [RFC8609]
                    %x0002         T_KEYIDRESTR [RFC8609]
                    %x0003         T_OBJHASHRESTR [RFC8609]
                    %x0005         T_PAYLDTYPE [RFC8609]
                    %x0006         T_EXPIRY [RFC8609]
                    %x0007         T_ENDCHUNK
                %x0008-%x000C      Reserved [RFC8609]
                    %x000D         T_DISC_REQ [RFC9344]
                    %x000E         T_DISC_REPLY [RFC9344]
                    %x000F         T_CHUNK_SIZE
                    %x0FFE         T_PAD [RFC8609]
                    %x0FFF         T_ORG [RFC8609]
                %x1000-%x1FFF      Reserved [RFC8609]

                   Figure 2: CCNx Message Type Namespace