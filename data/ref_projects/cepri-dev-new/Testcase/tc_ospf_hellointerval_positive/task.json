{
  "id": "tc_ospf_hellointerval_positive",
  "title": "OSPF HelloInterval Positive Test - Verify correct configuration of HelloInterval field",
  "objective": "Verify that the DUT correctly processes and establishes adjacency when receiving HelloInterval values consistent with the local interface configuration.",
  "test_reference": [
    "RFC 2328 (OSPFv2), Section A.3.2"
  ],
  "topology": [
    {
      "name": "TesterA",
      "type": "tester",
      "ports": [
        {
          "name": "PortTesterA_1",
          "connected_to": "DeviceA:PortDeviceA_1"
        }
      ]
    },
    {
      "name": "DeviceA",
      "type": "DUT",
      "ports": [
        {
          "name": "PortDeviceA_1",
          "connected_to": "TesterA:PortTesterA_1"
        }
      ]
    }
  ],
  "steps": [
    {
      "step_id": "1",
      "description": "Configure HelloInterval as 10 seconds on tester port 1 (PortTesterA_1) and start OSPF.",
      "expected_result": ""
    },
    {
      "step_id": "2",
      "description": "Configure HelloInterval as 10 seconds on DUT port 1 (PortDeviceA_1) and start OSPF.",
      "expected_result": ""
    },
    {
      "step_id": "3",
      "description": "Verify whether tester port 1 (PortTesterA_1) and DUT port 1 (PortDeviceA_1) can establish OSPF adjacency.",
      "expected_result": "Tester port 1 (PortTesterA_1) and DUT port 1 (PortDeviceA_1) successfully establish OSPF adjacency, state reaches FULL."
    }
  ],
  "tags": [
    "function",
    "protocol"
  ],
  "appendix": [
    {
      "title": "Device Initial Configuration Details",
      "content": [
        "1. TesterA IP address configuration:",
        "   - Tester port 1 (PortTesterA_1): 192.168.1.100/24",
        "2. DUT (DeviceA) IP address configuration:",
        "   - DUT port 1 (PortDeviceA_1): 192.168.1.1/24",
        "3. Enable and configure OSPF protocol on both tester and DUT, ensure HelloInterval fields are consistent."
      ]
    }
  ]
}