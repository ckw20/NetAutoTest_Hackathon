
{
  "test_cases": [
    {
      "id": "TC-OSPFv2-HELLO-NEIGHBOR-POS",
      "title": "OSPFv2 Hello Packet Neighbor Field Positive Test",
      "objective": "Verify that the Neighbor field in OSPFv2 Hello packets correctly lists Router IDs of neighbors who have sent valid Hello packets within the last RouterDeadInterval seconds.",
      "test_reference": [
        "RFC 2328 (OSPF Version 2), Section A.3.2"
      ],
      "topology": [
        {
          "name": "Tester",
          "type": "tester",
          "ports": [
            {
              "name": "port1",
              "connected_to": "DUT:port1"
            }
          ]
        },
        {
          "name": "DUT",
          "type": "DUT",
          "ports": [
            {
              "name": "port1",
              "connected_to": "Tester:port1"
            }
          ]
        }
      ],
      "steps": [
        {
          "step_id": "1",
          "description": "Initialize the device test environment according to the provided configuration.",
          "expected_result": "The test environment is initialized successfully."
        },
        {
          "step_id": "2",
          "description": "Configure OSPFv2 on both the Tester and DUT with a RouterDeadInterval of 40 seconds.",
          "expected_result": "OSPFv2 configuration is successful, and both devices are configured with a RouterDeadInterval of 40 seconds."
        },
        {
          "step_id": "3",
          "description": "Send a Hello packet from the Tester to the DUT with a valid Router ID and observe the DUT's response.",
          "expected_result": "The DUT includes the Tester's Router ID in its Neighbor field in subsequent Hello packets."
        },
        {
          "step_id": "4",
          "description": "Wait for 30 seconds (less than RouterDeadInterval) and send another Hello packet from the Tester to the DUT.",
          "expected_result": "The DUT continues to include the Tester's Router ID in its Neighbor field."
        }
      ],
      "tags": [
        "function",
        "ospf",
        "hello-packet"
      ],
      "appendix": [
        "Test precautions:",
        "1. Ensure all interfaces have normal physical connections.",
        "2. Ensure the RouterDeadInterval is consistent between the Tester and DUT.",
        "3. Clear OSPF states and routing tables of all devices before testing."
      ]
    },
    {
      "id": "TC-OSPFv2-HELLO-NEIGHBOR-NEG",
      "title": "OSPFv2 Hello Packet Neighbor Field Negative Test",
      "objective": "Verify that the Neighbor field in OSPFv2 Hello packets does not list Router IDs of neighbors who have not sent valid Hello packets within the last RouterDeadInterval seconds.",
      "test_reference": [
        "RFC 2328 (OSPF Version 2), Section A.3.2"
      ],
      "topology": [
        {
          "name": "Tester",
          "type": "tester",
          "ports": [
            {
              "name": "port1",
              "connected_to": "DUT:port1"
            }
          ]
        },
        {
          "name": "DUT",
          "type": "DUT",
          "ports": [
            {
              "name": "port1",
              "connected_to": "Tester:port1"
            }
          ]
        }
      ],
      "steps": [
        {
          "step_id": "1",
          "description": "Initialize the device test environment according to the provided configuration.",
          "expected_result": "The test environment is initialized successfully."
        },
        {
          "step_id": "2",
          "description": "Configure OSPFv2 on both the Tester and DUT with a RouterDeadInterval of 40 seconds.",
          "expected_result": "OSPFv2 configuration is successful, and both devices are configured with a RouterDeadInterval of 40 seconds."
        },
        {
          "step_id": "3",
          "description": "Send a Hello packet from the Tester to the DUT with a valid Router ID and observe the DUT's response.",
          "expected_result": "The DUT includes the Tester's Router ID in its Neighbor field in subsequent Hello packets."
        },
        {
          "step_id": "4",
          "description": "Wait for 50 seconds (exceeding RouterDeadInterval) without sending additional Hello packets from the Tester.",
          "expected_result": "The DUT removes the Tester's Router ID from its Neighbor field in subsequent Hello packets."
        }
      ],
      "tags": [
        "function",
        "ospf",
        "hello-packet"
      ],
      "appendix": [
        "Test precautions:",
        "1. Ensure all interfaces have normal physical connections.",
        "2. Ensure the RouterDeadInterval is consistent between the Tester and DUT.",
        "3. Clear OSPF states and routing tables of all devices before testing."
      ]
    }
  ],
  "comments": {
    "id": "The unique identifier of the test case. Often abbr. of title of objective.",
    "title": "The title of the test case, briefly describing the test content.",
    "objective": "The purpose of the test, explaining the function or feature that this test case intends to verify.",
    "test_reference": "Reference documents for the test case, such as sections of RFCs, etc.",
    "topology": [
      "Information about the devices and port connections involved in the test case, including the following fields:",
      "1. **name**: The name of the device, used to uniquely identify the device, such as tester, DUT1, DeviceA, etc.",
      "2. **type**: The type of the device (e.g., tester, DUT, etc.).",
      "3. **ports**: A list of the device's ports, describing each port of the device.",
      "   - **name**: The name of the port, used to uniquely identify the port, such as port1, etc.",
      "   - **connected_to**: Describes the device and port that this port is connected to, in the format 'device name:port name'."
    ],
    "steps": "A detailed description of the test steps, each step including:\nstep_id: The unique identifier of the step.\ndescription: The specific operation or configuration of the step.\nexpected_result: The expected result of the step.",
    "tags": "Tags for the test case, used to categorize or filter test cases. Types include: ['function', 'performance']",
    "appendix": "Appendix section, containing additional information or explanations, such as configuration parameters of the test environment, precautions, etc."
  }
}
